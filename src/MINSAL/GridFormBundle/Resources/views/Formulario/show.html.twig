{% extends 'IndicadoresBundle::standard_layout.html.twig' %}
{% block stylesheets %}    
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('bundles/gridform/js/jqwidgets4.1/styles/jqx.base.css') }}" type="text/css" media="all" />
    <link rel="stylesheet" href="{{ asset('bundles/gridform/js/jqwidgets4.1/styles/jqx.ui-redmond.css') }}" type="text/css" media="all" />
    <link rel="stylesheet" href="{{ asset('bundles/gridform/css/custom_grid.css') }}" type="text/css" media="all" />
    
{% endblock stylesheets %}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxcore.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxdata.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxbuttons.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxscrollbar.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxmenu.js') }}" type="text/javascript"></script>    
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.sort.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.pager.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.selection.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.edit.js') }}" type="text/javascript"></script>
    
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxinput.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxnumberinput.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxcheckbox.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxlistbox.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxdropdownlist.js') }}" type="text/javascript"></script>
    <!-- <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxswitchbutton.js') }}" type="text/javascript"></script> -->
    
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.filter.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.columnsresize.js') }}" type="text/javascript"></script>    
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxscrollbar.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxbuttons.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxcheckbox.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxdropdownlist.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxlistbox.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxmenu.js') }}" type="text/javascript"></script>    
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxcalendar.js') }}" type="text/javascript"></script>    
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxdatetimeinput.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.aggregates.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxdata.export.js') }}" type="text/javascript"></script>
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/jqxgrid.export.js') }}" type="text/javascript"></script>    
    <script src="{{ asset('bundles/gridform/js/jquery.mtz.monthpicker.js') }}" type="text/javascript"></script> 
    <script src="{{ asset('bundles/gridform/js/parametrosDependencia.js') }}" type="text/javascript"></script> 
    <script src="{{ asset('bundles/gridform/js/jqwidgets4.1/globalization/globalize.js') }}" type="text/javascript"></script>
    
    <script src="{{ asset("bundles/gridform/js/jqwidgets4.1/globalization/globalize.culture.#{app.request.locale}.js") }}" type="text/javascript"></script>
    
    {% block frm %}
    {% if periodoSeleccionado != null and parametros.periodo_estructura != '-1' %}
    {% set titulos = Frm.tituloColumnas | jsonDecode(true) %}
    <script type="text/javascript">
        $(document).ready(function () {
            $.jqx.theme = 'ui-redmond';                    
            var url = Routing.generate('{{url}}', {id: {{Frm.id}}, periodo_ingreso: $('#periodo_estructura').val(),titulo_frm : '{{titulo}}', datos_frm: $('#frm_').serialize() });
            var fila = 0;
            
            var error = false;
            // prepare the data
            var source =
            {
                datatype: "json",               
                updaterow: function (rowid, rowdata, commit) {
                    // synchronize with the server - send update command
                    // call commit with parameter etrue if the synchronization with the server is successful 
                    // and with parameter false if the synchronization failder.                    
                    if (rowdata.es_separador != 'true'){                    
                        if (rowdata.local == 'si'){
                            rowdata.local = 'no';                        
                            commit(true);                        
                        } else {
                            $.post(Routing.generate('{{url_save}}', {id: {{Frm.id}}, periodo_ingreso: $('#periodo_estructura').val() }), 
                                        {datos_frm: $('#frm_').serialize(),
                                            pk: $('#pk').val(),
                                            fila: JSON.stringify(rowdata),
                                        },
                            function(resp) {
                                if (resp.estado == 'ok') {
                                    var commit_ = $("#jqxgrid").jqxGrid('updaterow', rowid, resp.data);
                                    commit(true);
                                    error = false;
                                }
                                else {
                                    $('#modal_msj_content').html('<div class="alert alert-danger" role="alert">'+resp.msj+'</div>');
                                    $('#modal_msj').modal('show');
                                    commit(false);
                                }

                            }, 'json')
                                      .fail(function() {
                                        error = true;
                                        commit(false);                                   
                                        $('#modal_msj_content').html('<div class="alert alert-danger" role="alert">{{'_error_conexion_'|trans}}</div>');
                                        $('#modal_msj').modal('show');
                                      })
                            ;
                        }
                    }
                },
                datafields: [
                    {% for campo in Frm.campos %}
                        {% if campo.origenPivote %} 
                            {% for campoPivote in pivotes[campo.significadoCampo.codigo] %}
                                {% if tipos_datos_por_filas %}
                                    { name: '{{campo.significadoCampo.codigo}}_{{campoPivote.id}}', type: 'string' },
                                {% else %}
                                    { name: '{{campo.significadoCampo.codigo}}_{{campoPivote.id}}', type: '{{campo.tipoDato.codigo}}' },
                                {% endif %}
                                {% if campo.origen or campo.significadoCampo.catalogo != '' %} 
                                    { name: '{{campo.significadoCampo.codigo}}Source', value: '{{campo.significadoCampo.codigo}}', 
                                        values: { source: {{origenes[campo.significadoCampo.codigo]|raw}}, value: 'id', name: 'descripcion' } },
                                {% endif %}
                            {% endfor %}
                        {% else %}
                            {% if tipos_datos_por_filas %}
                                    { name: '{{campo.significadoCampo.codigo}}', type: 'string' },
                                {% else %}
                                    { name: '{{campo.significadoCampo.codigo}}', type: '{{campo.tipoDato.codigo}}' },
                                {% endif %}                            
                            {% if campo.origen or campo.significadoCampo.catalogo != '' %} 
                                { name: '{{campo.significadoCampo.codigo}}Source', value: '{{campo.significadoCampo.codigo}}', 
                                    values: { source: {{origenes[campo.significadoCampo.codigo]|raw}}, value: 'id', name: 'descripcion' } },
                            {% endif %}
                        {% endif %}
                    {% endfor %}
                    {name: 'es_poblacion'},
                    {name: 'es_separador'},
                    {name: 'nivel_indentacion'},
                    {name: 'codigo_tipo_control'},
                    {name: 'codigo_tipo_dato'},
                    {name: 'ayuda'}
                ],
                url: url,
                root: 'data'
            };
            var dataAdapter = new $.jqx.dataAdapter(source);
            $("#jqxgrid").jqxGrid(
            {
                width: '95%',
                columnsheight: {% if Frm.gruposColumnas|length > 0 %}'40px'{% else %}'45px'{% endif %},
                source: dataAdapter,
                columnsresize: true,
                editable: {{editable|default(true)}},
                {% if (Frm.noOrdenarPorFila) %} 
                    sortable: false,
                {% else %}
                    sortable: true,
                {% endif %}
                {% if Frm.ajustarAltoFila %}
                    autorowheight: true,
                    autoheight: true,
                {% endif %}
                //altrows: true,
                {% if mostrar_resumen %}
                    showaggregates: true,
                    showstatusbar: true,                    
                {% endif %}
                filterable: true,
                editmode: 'click',                
                selectionmode: 'multiplecellsadvanced',
                {% set columnas_fijas = Frm.columnasFijas|default(0) %}
                columns: [
                    {% if not(Frm.ocultarNumeroFila) %} 
                        {
                          text: '#', sortable: false, filterable: false, editable: false,
                          groupable: false, draggable: false, resizable: false,
                          datafield: '', columntype: 'number', width: 50, pinned: true,
                          cellsrenderer: function (row, column, value) {
                              return "<div style='margin:4px;'>" + (row + 1) + "</div>";
                          }
                        },
                    {% endif %}
                    {% set indice = 0 %}
                    {% for campo in Frm.campos %}                        
                        {% set indice = indice+1 %}
                        {% if campo.origenPivote %}
                            {% set Pivotes_ =  pivotes[campo.significadoCampo.codigo] %}
                        {% else %}
                            {% set Pivotes_ = [campo] %}
                        {% endif %}
                        
                        {% for pivote in Pivotes_ %}
                        {                            
                            {% if editable == true %}
                                {%if (campo.significadoCampo.codigo == 'cant_mensual' 
                                        or campo.significadoCampo.codigo == 'importe_mensual' 
                                        or campo.significadoCampo.codigo == 'cant_mensual_calidad'
                                        or campo.significadoCampo.codigo == 'mes_check'
                                    ) 
                                    and campo.origenPivote %}
                                    {% if pivote.id in meses_activos %}
                                        {% set celda_editable = true %}
                                    {% else %} 
                                        {% set celda_editable = false %}
                                    {% endif %}
                                {% else %}                                    
                                    {% set celda_editable = campo.esEditable  %}                                         
                                {% endif %}
                            {% else %} 
                                {% set celda_editable = false %} 
                            {% endif %}
                            {% if campo.origenPivote %}
                                text: '{{pivote.descripcion}}', 
                                datafield: '{{campo.significadoCampo.codigo}}_{{pivote.id}}', 
                            {% else %}
                                {% if titulos != null and campo.significadoCampo.codigo in titulos|keys%}
                                    text: '{{titulos[campo.significadoCampo.codigo]}}', 
                                {% else %}
                                    text: '{{campo.significadoCampo.descripcion}}', 
                                {% endif %}
                                datafield: '{{campo.significadoCampo.codigo}}', 
                            {% endif %}
                            align: 'center',                            
                            width: {{campo.ancho|default(100)}},
                            {% if indice  <=  columnas_fijas %}
                                pinned: true,
                            {% endif %}
                            cellsalign: '{{campo.alineacion.codigo|default('left')}}',
                            {% if not celda_editable %}
                                cellclassname: 'celda_no_editable',
                            {% endif%}                            
                            editable: {{ (celda_editable)? 'true' : 'false' }}, 
                                
                            hidden: {{campo.oculto|default('false')}},
                            {% if tipos_datos_por_filas %}
                                columntype: 'custom',
                            {% else %}
                                columntype: '{{campo.tipoControl.codigo}}',
                            {% endif %}
                            {% if campo.esCalculado and mostrar_resumen %} aggregates: ['sum'], {% endif %}                            
                            {% if campo.tipoControl.codigo == 'datetimeinput' %}
                                cellsformat: 'dd/MM/yyyy',
                            {% endif %}
                            {% if campo.origen or campo.significadoCampo.catalogo != '' %} displayfield: '{{campo.significadoCampo.codigo}}Source', 
                                createeditor: function (row, value, editor) {
                                    editor.jqxDropDownList({ source: {{origenes[campo.significadoCampo.codigo]|raw}}, displayMember: 'descripcion', valueMember: 'id' });
                                },
                            {% endif %}                            
                            {% if campo.grupoColumnas %} columngroup: '{{campo.grupoColumnas.codigo}}', {% endif %}
                            {% if campo.formato %} cellsformat: '{{campo.formato.formato}}', {% endif %}
                            {% if campo.reglaValidacion %}
                                validation: function (cell, value) {
                                    if ({{campo.reglaValidacion|raw}}) {
                                        return true;
                                    }
                                    return { result: false, message: "{{campo.msjValidacion|default('_dato_no_valido_')|trans}}" };
                                },
                            {% endif %}
                            {% if campo.formula %} 
                                cellsrenderer: function (index, datafield, value, defaultvalue, column, rowdata) {
                                    {{campo.formula|raw}};
                                    return "<div  class='jqx-{{campo.alineacion.codigo|default('left')}}-align'>" + dataAdapter.formatNumber(result,'{{campo.formato.formato|default('')}}') + "</div>";
                                }, 
                            {% endif %}
                            {% if tipos_datos_por_filas %}
                                createeditor: function(row, cellValue, editor, cellText, width, height)
                                {
                                    var datarow = $("#jqxgrid").jqxGrid('getrowdata', row);
                                    var tipo_control = (datarow.codigo_tipo_control == undefined) ?  '{{campo.tipoControl.codigo}}' : datarow.codigo_tipo_control;
                                    if (datarow.es_separador != 'true'){
                                        if (tipo_control == 'checkbox' || tipo_control == 'checkbox_3_states'){
                                            var element = $('<div tabIndex=0 style="position: absolute; top: 50%; left: 50%; margin-top: -10px; margin-left: -10px;"></div>');
                                            //var element = $('<div tabIndex=0 ></div>');
                                            editor.append(element);
                                            if (tipo_control == 'checkbox_3_states')
                                                element.jqxCheckBox({hasThreeStates: true, animationShowDelay: 0, animationHideDelay: 0});
                                            else 
                                                element.jqxCheckBox({animationShowDelay: 0, animationHideDelay: 0});
                                            //element.jqxSwitchButton({onLabel:'SI', offLabel:'NO'});
                                        } else if (tipo_control == 'text') {
                                            var inputElement = $("<input type='text' style='width: 100%; height: 100%;' />").prependTo(editor);
                                            inputElement.jqxInput({  width: width, height: height});                      
                                        } else if (tipo_control == 'datetimeinput') {        
                                            var element = $('<div></div>');
                                            editor.append(element);
                                            element.jqxDateTimeInput({width: '250px', height: '25px'});
                                        }
                                    }
                                },
                                initeditor : function (row, cellValue, editor, cellText, width, height, pressedkey) {
                                    var datarow = $("#jqxgrid").jqxGrid('getrowdata', row);
                                    var tipo_control = (datarow.codigo_tipo_control == undefined) ?  '{{campo.tipoControl.codigo}}' : datarow.codigo_tipo_control;
                                    if (datarow.es_separador != 'true'){
                                        if (tipo_control == 'checkbox' || tipo_control == 'checkbox_3_states'){
                                            var checkBoxHTMLElement = editor.find('div:first');
                                            //alert(cellValue);
                                            if (tipo_control == 'checkbox_3_states'){
                                                if (cellValue != undefined){
                                                    if (cellValue.toString() == "true")
                                                        checkBoxHTMLElement.jqxCheckBox({checked: true});
                                                    else if (cellValue.toString() == "false")
                                                        checkBoxHTMLElement.jqxCheckBox({checked: false});
                                                    else
                                                        checkBoxHTMLElement.jqxCheckBox('indeterminate');
                                                } else{
                                                    checkBoxHTMLElement.jqxCheckBox('indeterminate');
                                                }
                                            } else {
                                                n_ = (cellValue == undefined) ? false : (cellValue.toString() == "true") ? true: false;
                                                checkBoxHTMLElement.jqxCheckBox({checked: n_});
                                            }
                                            //checkBoxHTMLElement.jqxCheckBox('toggle');
                                            //checkBoxHTMLElement.jqxSwitchButton({checked: n_});                                            
                                            checkBoxHTMLElement.jqxCheckBox('toggle');
                                            var val = checkBoxHTMLElement.val();
                                            editor.val(val);
                                        }
                                        else if (tipo_control == 'text'){   
                                            //var inputHTMLElement = editor.find("input");
                                            //inputHTMLElement.jqxInput('val', cellValue);
                                            //inputHTMLElement.focus();
                                            var inputField = editor.find('input');
                                            if (pressedkey) {
                                                inputField.val(pressedkey);
                                                inputField.jqxInput('selectLast');
                                            }
                                            else {
                                                inputField.val(cellvalue);
                                                inputField.jqxInput('selectAll');
                                            }
                                        } else if (tipo_control == 'datetimeinput'){
                                            var dateElement = editor.find('div:first');
                                            var startDate = moment(cellvalue, "DD/MM/YYYY").toDate();
                                            dateElement.jqxDateTimeInput('setDate', startDate);
                                        }
                                    }
                                },
                                geteditorvalue : function (row, cellValue, editor) {
                                    var datarow = $("#jqxgrid").jqxGrid('getrowdata', row);
                                    var tipo_control = (datarow.codigo_tipo_control == undefined) ?  '{{campo.tipoControl.codigo}}' : datarow.codigo_tipo_control;
                                    if (datarow.es_separador != 'true'){                                        
                                      if (tipo_control == 'checkbox' || tipo_control == 'checkbox_3_states'){
                                          var checkBoxHTMLElement = editor.find('div:first');
                                          return checkBoxHTMLElement.val();
                                      } else if (tipo_control == 'text'){
                                          return editor.find('input').val();
                                      } else if (tipo_control == 'datetimeinput'){
                                          var dateElement = editor.find('div:first');
                                          return dateElement.jqxDateTimeInput('getDate');
                                      }

                                      return editor.val();
                                    }
                                },
                            {% endif %}
                            cellsrenderer: function (index, datafield, cellValue, defaultvalue, column, datarow) {
                                estilo = (datarow.es_poblacion == 'true') ? "style='color: blue; padding-left:"+(parseInt(datarow.nivel_indentacion) * 20)+"px '" :  "style = 'padding-left:"+(parseInt(datarow.nivel_indentacion) * 20)+"px' ";
                                
                                if (datarow.es_separador == 'true'){
                                    {% if campo.significadoCampo.codigo  ==  'descripcion_variable' %}
                                        return "<div class='separador_variable jqx-{{campo.alineacion.codigo|default('left')}}-align' "+ estilo + " title='"+datarow.ayuda+"'  data-placement= 'top' >" + cellValue +"</div>";
                                    {% else %}
                                        return "<DIV class= 'separador' style= 'padding-left:"+(parseInt(datarow.nivel_indentacion) * 20)+"px'></DIV>"
                                    {% endif %}
                                }
                                {% if tipos_datos_por_filas  and campo.tipoDefinidoPorFila %}
                                    var tipo_control = (datarow.codigo_tipo_control == undefined) ?  '{{campo.tipoControl.codigo}}' : datarow.codigo_tipo_control;  
                                    if (tipo_control == 'checkbox' || tipo_control == 'checkbox_3_states'){
                                        var element_aux = $('<div></div>')
                                        var element = $('<div tabIndex=0 style="position: absolute; top: 50%; left: 50%; margin-top: -10px; margin-left: -10px;"></div>');
                                        if (tipo_control == 'checkbox_3_states'){
                                            element.jqxCheckBox({hasThreeStates: true, animationShowDelay: 0, animationHideDelay: 0, checked: cellValue.toString() == "true" });
                                            if (cellValue.toString() != 'true' && cellValue.toString() != 'false'){
                                                element.jqxCheckBox('indeterminate');
                                            }
                                        } else
                                            element.jqxCheckBox({animationShowDelay: 0, animationHideDelay: 0, checked: cellValue.toString() == "true" });                                        
                                        //element.jqxSwitchButton({checked: cellValue.toString() == "true", onLabel:'SI', offLabel:'NO'});
                                        element_aux.append(element);
                                        return element_aux.html();
                                    }
                                    else    return "<div class='jqx-{{campo.alineacion.codigo|default('left')}}-align' "+ estilo + " title='"+datarow.ayuda+"'  data-placement= 'top' >" + cellValue +"</div>";
                                    
                                {% else %}
                                    return "<div class='jqx-{{campo.alineacion.codigo|default('left')}}-align' "+ estilo + " title='"+datarow.ayuda+"'  data-placement= 'top' >" + cellValue +"</div>";
                                {% endif %}                                
                            },
                        },
                        {% endfor %}
                    {% endfor %}
                ],
                {% set item_count = 0 %}
                {% for grp in Frm.gruposColumnas %}
                    {% set item_count = item_count+1 %}
                {% endfor %}
                {% if item_count > 0 %}
                    columngroups: [
                        {% for grp in Frm.gruposColumnas %}
                            { text: '{{grp.descripcion}}', 
                                align: 'center', 
                                name: '{{grp.codigo}}',
                                {% if grp.grupoPadre %} parentgroup: '{{grp.grupoPadre.codigo}}', {% endif %}
                            },
                        {% endfor %}
                    ],
                {% endif %}
                rendered: function(){                 
                    $('.jqx-grid-column-header').each(function(i, nodo){
                        $($($(nodo).children()[0]).children()[0]).css('margin-top',0).css('margin-bottom',0);
                    });
                },
                ready: function(){
                    var texto = $( "div.separador_variable" ).html();
                    $("#jqxgrid").jqxGrid('beginupdate');
                    var elemento = $( "div.separador_variable" ).parent().parent();
                    elemento.addClass('fila_separador');
                    $("#jqxgrid").jqxGrid('endupdate');
                }
            });
             
            var listSource = [
                {% for campo in Frm.campos %}
                    {% if campo.origenPivote %} 
                        {% for campoPivote in pivotes[campo.significadoCampo.codigo] %}
                            { label: '{{campoPivote.descripcion}}', value: '{{campo.significadoCampo.codigo}}_{{campoPivote.id}}', checked: true },
                        {% endfor %}
                    {% else %}
                        {% if not(campo.oculto) %}
                            { label: '{{campo.significadoCampo.descripcion}}', value: '{{campo.significadoCampo.codigo}}', checked: true },
                        {% endif %}
                    {% endif %}
                {% endfor %}                
                ];
            $("#jqxlistbox").jqxListBox({ source: listSource, width: 500, height: 400,  checkboxes: true });
            $("#jqxlistbox").on('checkChange', function (event) {
                $("#jqxgrid").jqxGrid('beginupdate');
                if (event.args.checked) {
                    $("#jqxgrid").jqxGrid('showcolumn', event.args.value);
                }
                else {
                    $("#jqxgrid").jqxGrid('hidecolumn', event.args.value);
                }
                $("#jqxgrid").jqxGrid('endupdate');
            });
                        
            $("#jqxgrid").on('cellbeginedit', function (event) {
                var args = event.args;
                $('#col').val(args.datafield);
                $('#fil').val(args.rowindex);                
            });
            
            $("#clear").click(function () {
                $("#jqxgrid").jqxGrid('clear');
                //$('#mensaje').html('');
            });
            $("#guardar").click(function () {
                if (error){
                    $('#modal_msj_content').html('<div class="alert alert-warning" role="alert">{{'_error_anterior_'|trans}}</div>');
                    $('#modal_msj').modal('show');
                }
                else {
                    $('#modal_msj_content').html('<div class="alert alert-success" role="alert">{{'_datos_guardados_'|trans}}</div>');
                    $('#modal_msj').modal('show');                    
                }
            });
            $("#exportar").click(function () {
                $("#jqxgrid").jqxGrid('exportdata', 'xls', 'jqxGrid');           
            });         
        });
    </script>    
    {% else %}
        <script type="text/javascript">
            $(document).ready(function () {
                $('[data-toggle="popover"]').popover('show');
            });
        </script>
    {% endif %}
    {% endblock frm %}
{% endblock javascripts %}
{% block content %}
    <nav class="navbar navbar-default" role="navigation">
        <div class="navbar-header">
            <span class="navbar-brand">{{titulo|trans}}{% if periodoSeleccionado != null and parametros.periodo_estructura != '-1' %} :: <B>{{Frm.nombre}}</b>{% endif %}</span>
        </div>
    </nav>
        
        <form id="frm_" class="form-inline" >
        <div class="box-body">        
            {% block frm_head %}
                <DIV style="width: 98%; text-align: right" class="prueba">
                    <button class="btn btn-success" type="submit" name="cargar_datos" id="cargar_datos" ><span class="glyphicon glyphicon-repeat" aria-hidden="true"></span>{{'_cargar_datos_'|trans}}</button>                    
                    {#<button class="btn btn-danger" name="clear" id="clear" ><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>{{'_limpiar_'|trans}}</button>#}
                    <button class="btn btn-instagram" type="button" name="guardar" id="guardar" ><i class="fa fa-save" data-original-title="" title=""></i>{{'_guardar_'|trans}}</button>
                    <button class="btn btn-file" type="button" name="exportar" id="exportar" ><i class="fa fa-archive" data-original-title="" title=""></i>{{'_exportar_'|trans}}</button>
                    {% if periodoSeleccionado != null and parametros.periodo_estructura != '-1' and Frm.rutaManualUso != '' %}
                        <a href="Frm.rutaManualUso" TARGET="_blank" class="btn btn-info" role="button"><i class="fa fa-question-circle" data-original-title="" title=""></i>{{'_manual_uso_'|trans}}</a>
                    {% endif %}                                    
                    <DIV id="mensaje"></div>
                </div>
                <DIV class="descripcion_frm">
                    {% if Frm is defined %}{{Frm.descripcion}}{% endif %}
                </DIV>
            {% endblock frm_head %}
            {% block grid %}
                <div id='jqxWidget' style="padding: 10px;">
                    <div role="tabpanel">
                        <ul class="nav nav-tabs" role="tablist">
                            <li role="presentation" class="active"><a href="#jqxgrid" role="tab" data-toggle="tab">{{'_cuadro_datos_'|trans}}</a></li>
                            <li role="presentation"><a href="#jqxlistbox" aria-controls="profile" role="tab" data-toggle="tab">{{'_columnas_'|trans}}</a></li>
                        </ul>
                        <div class="tab-content">
                            <div id="jqxgrid" role="tabpanel" class="tab-pane active"></div>
                            <div role="tabpanel" class="tab-pane" id="jqxlistbox"></div>                    
                        </div>
                    </div>                    
                </div>
            {% endblock %}
            {% block frm_foot %} {% endblock frm_foot %}
        </div>
        <input type="hidden" name="pk" id='pk' value="{{pk}}" />
        <input type="hidden" name="col" id='col' />
        <input type="hidden" name="fil" id='fil' />
    </form>
    <div class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" id='modal_msj' aria-labelledby="mySmallModalLabel">
        <div class="modal-dialog modal-sm">
            <div class="modal-content" id="modal_msj_content"></div>
        </div>
    </div>
    <div class="modal fade bs-example-modal-sm" tabindex="-1" data-backdrop="true" data-keyboard= 'true' id='modal_msj_solo_fondo' aria-labelledby="mySmallModalLabel">
        <div class="modal-dialog modal-sm">
            <div class="modal-content"></div>
        </div>
    </div>
{% endblock content %}